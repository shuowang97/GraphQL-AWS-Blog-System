import React, { Component } from 'react'
import { API, graphqlOperation } from 'aws-amplify';
import { createLike, updatePost } from '../graphql/mutations'
import { Auth } from 'aws-amplify';


class LikePost extends Component {


  state = {

    postOwnerId: '',
    postOwnerUsername: '',
    likeOwnerUsername: '',
    likeOwnerId: '',
    numberLikes: 0,
    postTitle: "",
    postBody: "",
    posts: []
  }

  componentDidMount = async () => {
    // Get the current authenticated user
    await Auth.currentUserInfo()
      .then(user => {
        // console.log("stuff: ", JSON.stringify(user))
        this.setState(
          {
            postOwnerUsername: user.username,
            postOwnerId: user.attributes.sub,
            likeOwnerUsername: user.username,
            likeOwnerId: user.attributes.sub
          }
        )
      })
  }


  handleLike = async postId => {

    this.setState({ numberLikes: this.state.numberLikes + 1 })
    const input = {
      numberLikes: this.state.numberLikes,
      likeOwnerId: this.state.likeOwnerId,
      likeOwnerUsername: this.state.likeOwnerUsername,
      likePostId: postId
    }


    const result = await API.graphql(graphqlOperation(createLike, { input }))
    //we must add this like object into our post by updating our post!?

    console.log("CreateLike: ", result.data)
  }
  render() {
    const post = this.props.data
    const tots = this.props.total
    return (

      <p onClick={() => this.handleLike(post.id)} className="like-button">Like {tots}</p>
    )
  }
}
export default LikePost;

